{"ast":null,"code":"const cart = [];\nconst handleCart = (state = cart, action) => {\n  const orderData = sta => {\n    fetch('http://localhost:3000/cartdetails', {\n      method: 'DELETE'\n    }).then(() => {\n      // Cart data deleted successfully\n    }).catch(error => {\n      console.error('Error deleting cart data: ', error);\n    });\n    fetch(\"http://localhost:3001/cartdetails\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sta\n      })\n    }).then(res => {\n      toast.success(\"Checkout successfully.\");\n      navigate(\"/order\");\n    }).catch(err => {\n      toast.error(\"Failed: \" + err.message);\n    });\n  };\n  const rest = action.payload;\n  switch (action.type) {\n    case \"ADDITEM\":\n      //  check if Rest is Already Exist\n      const exist = state.find(x => x.id === rest.id);\n      if (exist) {\n        // Increase the Quantity\n        state.map(x => x.id === rest.id ? {\n          ...x,\n          qty: x.qty + 1\n        } : x);\n        orderData(state);\n        return state;\n      } else {\n        const rest = action.payload;\n        const gg = [...state, {\n          ...rest,\n          qty: 1\n        }];\n        orderData(gg);\n        return gg;\n      }\n      orderData(state);\n    case \"DELTITEM\":\n      const exist1 = state.find(x => x.id === rest.id);\n      console.log(\"delete\");\n      if (exist1.qty === 1) {\n        return state.filter(x => x.id !== exist1.id);\n      } else {\n        console.log(\"cart si th\");\n        return state.map(x => x.id === rest.id ? {\n          ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n    default:\n      return state;\n  }\n};\nexport default handleCart;","map":{"version":3,"names":["cart","handleCart","state","action","orderData","sta","fetch","method","then","catch","error","console","headers","body","JSON","stringify","res","toast","success","navigate","err","message","rest","payload","type","exist","find","x","id","map","qty","gg","exist1","log","filter"],"sources":["C:/Users/kumar/OneDrive/Desktop/4 React project/Zomato/my-foodi/src/redux/reducer/handleCart.js"],"sourcesContent":["const cart = [];\r\n\r\nconst handleCart = (state = cart, action) => {\r\n  const orderData= (sta)=>{\r\n    fetch('http://localhost:3000/cartdetails', {\r\n        method: 'DELETE',\r\n    })\r\n        .then(() => {\r\n            // Cart data deleted successfully\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error deleting cart data: ', error);\r\n        });\r\n\r\n    fetch(\"http://localhost:3001/cartdetails\", {\r\n      method: \"POST\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      body: JSON.stringify({sta}),\r\n    })\r\n      .then((res) => {\r\n        toast.success(\"Checkout successfully.\");\r\n        navigate(\"/order\");\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Failed: \" + err.message);\r\n      });\r\n  }\r\n  const rest = action.payload;\r\n  switch (action.type) {\r\n    case \"ADDITEM\":\r\n      //  check if Rest is Already Exist\r\n      const exist = state.find((x) => x.id === rest.id);\r\n      if (exist) {\r\n        // Increase the Quantity\r\n        state.map((x) =>\r\n          x.id === rest.id ? { ...x, qty: x.qty + 1 } : x\r\n        );\r\n        orderData(state);\r\n        return state;\r\n      } else {\r\n        const rest = action.payload;\r\n        const gg= [\r\n          ...state,\r\n          {\r\n            ...rest,\r\n            qty: 1,\r\n          },\r\n        ];\r\n        orderData(gg);\r\n        return gg;\r\n      }\r\n      orderData(state);\r\n\r\n    case \"DELTITEM\":\r\n      const exist1 = state.find((x) => x.id === rest.id);\r\n      console.log(\"delete\");\r\n      if (exist1.qty === 1) {\r\n        return state.filter((x) => x.id !== exist1.id);\r\n      } else {\r\n        console.log(\"cart si th\");\r\n        return state.map((x) =>\r\n          x.id === rest.id ? { ...x, qty: x.qty - 1 } : x\r\n        );\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default handleCart;\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG,EAAE;AAEf,MAAMC,UAAU,GAAGA,CAACC,KAAK,GAAGF,IAAI,EAAEG,MAAM,KAAK;EAC3C,MAAMC,SAAS,GAAGC,GAAG,IAAG;IACtBC,KAAK,CAAC,mCAAmC,EAAE;MACvCC,MAAM,EAAE;IACZ,CAAC,CAAC,CACGC,IAAI,CAAC,MAAM;MACR;IAAA,CACH,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;IAENJ,KAAK,CAAC,mCAAmC,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdK,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACV;MAAG,CAAC;IAC5B,CAAC,CAAC,CACCG,IAAI,CAAEQ,GAAG,IAAK;MACbC,KAAK,CAACC,OAAO,CAAC,wBAAwB,CAAC;MACvCC,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,CACDV,KAAK,CAAEW,GAAG,IAAK;MACdH,KAAK,CAACP,KAAK,CAAC,UAAU,GAAGU,GAAG,CAACC,OAAO,CAAC;IACvC,CAAC,CAAC;EACN,CAAC;EACD,MAAMC,IAAI,GAAGnB,MAAM,CAACoB,OAAO;EAC3B,QAAQpB,MAAM,CAACqB,IAAI;IACjB,KAAK,SAAS;MACZ;MACA,MAAMC,KAAK,GAAGvB,KAAK,CAACwB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;MACjD,IAAIH,KAAK,EAAE;QACT;QACAvB,KAAK,CAAC2B,GAAG,CAAEF,CAAC,IACVA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CAChD,CAAC;QACDvB,SAAS,CAACF,KAAK,CAAC;QAChB,OAAOA,KAAK;MACd,CAAC,MAAM;QACL,MAAMoB,IAAI,GAAGnB,MAAM,CAACoB,OAAO;QAC3B,MAAMQ,EAAE,GAAE,CACR,GAAG7B,KAAK,EACR;UACE,GAAGoB,IAAI;UACPQ,GAAG,EAAE;QACP,CAAC,CACF;QACD1B,SAAS,CAAC2B,EAAE,CAAC;QACb,OAAOA,EAAE;MACX;MACA3B,SAAS,CAACF,KAAK,CAAC;IAElB,KAAK,UAAU;MACb,MAAM8B,MAAM,GAAG9B,KAAK,CAACwB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;MAClDjB,OAAO,CAACsB,GAAG,CAAC,QAAQ,CAAC;MACrB,IAAID,MAAM,CAACF,GAAG,KAAK,CAAC,EAAE;QACpB,OAAO5B,KAAK,CAACgC,MAAM,CAAEP,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKI,MAAM,CAACJ,EAAE,CAAC;MAChD,CAAC,MAAM;QACLjB,OAAO,CAACsB,GAAG,CAAC,YAAY,CAAC;QACzB,OAAO/B,KAAK,CAAC2B,GAAG,CAAEF,CAAC,IACjBA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CAChD,CAAC;MACH;IAEF;MACE,OAAOzB,KAAK;EAChB;AACF,CAAC;AACD,eAAeD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}