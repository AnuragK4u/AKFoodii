{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kumar\\\\OneDrive\\\\Desktop\\\\4 React project\\\\Zomato\\\\my-foodi\\\\src\\\\component\\\\Cart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { addCart, delCart } from '../redux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const state = useSelector(state => state.handleCart);\n  const dispatch = useDispatch();\n  const [cartData, setCartData] = useState([]);\n  useEffect(() => {\n    // Retrieve cart data from local storage on component load\n    const storedCartData = JSON.parse(localStorage.getItem('cartData')) || [];\n    setCartData(storedCartData);\n  }, []);\n  useEffect(() => {\n    // Save cart data to local storage whenever it changes\n    localStorage.setItem('cartData', JSON.stringify(cartData));\n  }, [cartData]);\n  const handleAdd = item => {\n    // Update cartData and dispatch addCart action\n    const updatedCartData = [...cartData];\n    const existingItemIndex = updatedCartData.findIndex(cartItem => cartItem.product_id === item.product_id);\n    if (existingItemIndex !== -1) {\n      updatedCartData[existingItemIndex].qty++;\n    } else {\n      item.qty = 1;\n      updatedCartData.push(item);\n    }\n    setCartData(updatedCartData);\n    dispatch(addCart(item));\n  };\n  const handleDel = item => {\n    // Update cartData and dispatch delCart action\n    const updatedCartData = [...cartData];\n    const existingItemIndex = updatedCartData.findIndex(cartItem => cartItem.product_id === item.product_id);\n    if (existingItemIndex !== -1) {\n      if (updatedCartData[existingItemIndex].qty > 1) {\n        updatedCartData[existingItemIndex].qty--;\n      } else {\n        updatedCartData.splice(existingItemIndex, 1);\n      }\n    }\n    setCartData(updatedCartData);\n    dispatch(delCart(item));\n  };\n  const clearCart = () => {\n    // Clear the cart by resetting cartData\n    setCartData([]);\n  };\n\n  // Rest of your component remains the same\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Cart, \"mwoJQ3ykTUPBLW9yKemSp50tMSE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","NavLink","addCart","delCart","jsxDEV","_jsxDEV","Cart","_s","state","handleCart","dispatch","cartData","setCartData","storedCartData","JSON","parse","localStorage","getItem","setItem","stringify","handleAdd","item","updatedCartData","existingItemIndex","findIndex","cartItem","product_id","qty","push","handleDel","splice","clearCart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kumar/OneDrive/Desktop/4 React project/Zomato/my-foodi/src/component/Cart.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { addCart, delCart } from '../redux/action';\r\n\r\nconst Cart = () => {\r\n    const state = useSelector((state) => state.handleCart);\r\n    const dispatch = useDispatch();\r\n\r\n    const [cartData, setCartData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Retrieve cart data from local storage on component load\r\n        const storedCartData = JSON.parse(localStorage.getItem('cartData')) || [];\r\n        setCartData(storedCartData);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Save cart data to local storage whenever it changes\r\n        localStorage.setItem('cartData', JSON.stringify(cartData));\r\n    }, [cartData]);\r\n\r\n    const handleAdd = (item) => {\r\n        // Update cartData and dispatch addCart action\r\n        const updatedCartData = [...cartData];\r\n        const existingItemIndex = updatedCartData.findIndex((cartItem) => cartItem.product_id === item.product_id);\r\n\r\n        if (existingItemIndex !== -1) {\r\n            updatedCartData[existingItemIndex].qty++;\r\n        } else {\r\n            item.qty = 1;\r\n            updatedCartData.push(item);\r\n        }\r\n\r\n        setCartData(updatedCartData);\r\n        dispatch(addCart(item));\r\n    };\r\n\r\n    const handleDel = (item) => {\r\n        // Update cartData and dispatch delCart action\r\n        const updatedCartData = [...cartData];\r\n        const existingItemIndex = updatedCartData.findIndex((cartItem) => cartItem.product_id === item.product_id);\r\n\r\n        if (existingItemIndex !== -1) {\r\n            if (updatedCartData[existingItemIndex].qty > 1) {\r\n                updatedCartData[existingItemIndex].qty--;\r\n            } else {\r\n                updatedCartData.splice(existingItemIndex, 1);\r\n            }\r\n        }\r\n\r\n        setCartData(updatedCartData);\r\n        dispatch(delCart(item));\r\n    };\r\n\r\n    const clearCart = () => {\r\n        // Clear the cart by resetting cartData\r\n        setCartData([]);\r\n    };\r\n\r\n    // Rest of your component remains the same\r\n\r\n    return (\r\n        <div>\r\n            {/* ... (rest of the component remains the same) */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,OAAO,EAAEC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,KAAK,GAAGT,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,UAAU,CAAC;EACtD,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMgB,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;IACzEL,WAAW,CAACC,cAAc,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACZ;IACAmB,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACK,SAAS,CAACR,QAAQ,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMS,SAAS,GAAIC,IAAI,IAAK;IACxB;IACA,MAAMC,eAAe,GAAG,CAAC,GAAGX,QAAQ,CAAC;IACrC,MAAMY,iBAAiB,GAAGD,eAAe,CAACE,SAAS,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,UAAU,KAAKL,IAAI,CAACK,UAAU,CAAC;IAE1G,IAAIH,iBAAiB,KAAK,CAAC,CAAC,EAAE;MAC1BD,eAAe,CAACC,iBAAiB,CAAC,CAACI,GAAG,EAAE;IAC5C,CAAC,MAAM;MACHN,IAAI,CAACM,GAAG,GAAG,CAAC;MACZL,eAAe,CAACM,IAAI,CAACP,IAAI,CAAC;IAC9B;IAEAT,WAAW,CAACU,eAAe,CAAC;IAC5BZ,QAAQ,CAACR,OAAO,CAACmB,IAAI,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMQ,SAAS,GAAIR,IAAI,IAAK;IACxB;IACA,MAAMC,eAAe,GAAG,CAAC,GAAGX,QAAQ,CAAC;IACrC,MAAMY,iBAAiB,GAAGD,eAAe,CAACE,SAAS,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,UAAU,KAAKL,IAAI,CAACK,UAAU,CAAC;IAE1G,IAAIH,iBAAiB,KAAK,CAAC,CAAC,EAAE;MAC1B,IAAID,eAAe,CAACC,iBAAiB,CAAC,CAACI,GAAG,GAAG,CAAC,EAAE;QAC5CL,eAAe,CAACC,iBAAiB,CAAC,CAACI,GAAG,EAAE;MAC5C,CAAC,MAAM;QACHL,eAAe,CAACQ,MAAM,CAACP,iBAAiB,EAAE,CAAC,CAAC;MAChD;IACJ;IAEAX,WAAW,CAACU,eAAe,CAAC;IAC5BZ,QAAQ,CAACP,OAAO,CAACkB,IAAI,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACpB;IACAnB,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC;;EAED;;EAEA,oBACIP,OAAA;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA9DID,IAAI;EAAA,QACQP,WAAW,EACRC,WAAW;AAAA;AAAAoC,EAAA,GAF1B9B,IAAI;AAgEV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}