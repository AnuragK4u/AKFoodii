{"ast":null,"code":"const cart = [];\nconst handleCart = (state = cart, action) => {\n  const rest = action.payload;\n  switch (action.type) {\n    case \"ADDITEM\":\n      //  check if Rest is Already Exist\n      const exist = state.find(x => x.id === rest.id);\n      if (exist) {\n        // Increase the Quantity\n        return state.map(x => x.id === rest.id ? {\n          ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        const rest = action.payload;\n        return [...state, {\n          ...rest,\n          qty: 1\n        }];\n      }\n    case \"DELTITEM\":\n      const exist1 = state.find(x => x.id === rest.id);\n      console.log(\"delete\");\n      if (exist1.qty === 1) {\n        return state.filter(x => x.id !== exist1.id);\n      } else {\n        console.log(\"cart si th\");\n        return state.map(x => x.id === rest.id ? {\n          ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n    default:\n      return state;\n  }\n};\nexport default handleCart;","map":{"version":3,"names":["cart","handleCart","state","action","rest","payload","type","exist","find","x","id","map","qty","exist1","console","log","filter"],"sources":["C:/Users/kumar/OneDrive/Desktop/4 React project/Zomato/my-foodi/src/redux/reducer/handleCart.js"],"sourcesContent":["const cart = [];\r\n\r\nconst handleCart = (state = cart, action) => {\r\n  const rest = action.payload;\r\n  switch (action.type) {\r\n    case \"ADDITEM\":\r\n      //  check if Rest is Already Exist\r\n      const exist = state.find((x) => x.id === rest.id);\r\n      if (exist) {\r\n        // Increase the Quantity\r\n        return state.map((x) =>\r\n          x.id === rest.id ? { ...x, qty: x.qty + 1 } : x\r\n        );\r\n      } else {\r\n        const rest = action.payload;\r\n        return [\r\n          ...state,\r\n          {\r\n            ...rest,\r\n            qty: 1,\r\n          },\r\n        ];\r\n      }\r\n\r\n    case \"DELTITEM\":\r\n      const exist1 = state.find((x) => x.id === rest.id);\r\n      console.log(\"delete\");\r\n      if (exist1.qty === 1) {\r\n        return state.filter((x) => x.id !== exist1.id);\r\n      } else {\r\n        console.log(\"cart si th\");\r\n        return state.map((x) =>\r\n          x.id === rest.id ? { ...x, qty: x.qty - 1 } : x\r\n        );\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default handleCart;\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG,EAAE;AAEf,MAAMC,UAAU,GAAGA,CAACC,KAAK,GAAGF,IAAI,EAAEG,MAAM,KAAK;EAC3C,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;EAC3B,QAAQF,MAAM,CAACG,IAAI;IACjB,KAAK,SAAS;MACZ;MACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;MACjD,IAAIH,KAAK,EAAE;QACT;QACA,OAAOL,KAAK,CAACS,GAAG,CAAEF,CAAC,IACjBA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CAChD,CAAC;MACH,CAAC,MAAM;QACL,MAAML,IAAI,GAAGD,MAAM,CAACE,OAAO;QAC3B,OAAO,CACL,GAAGH,KAAK,EACR;UACE,GAAGE,IAAI;UACPQ,GAAG,EAAE;QACP,CAAC,CACF;MACH;IAEF,KAAK,UAAU;MACb,MAAMC,MAAM,GAAGX,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;MAClDI,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrB,IAAIF,MAAM,CAACD,GAAG,KAAK,CAAC,EAAE;QACpB,OAAOV,KAAK,CAACc,MAAM,CAAEP,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKG,MAAM,CAACH,EAAE,CAAC;MAChD,CAAC,MAAM;QACLI,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACzB,OAAOb,KAAK,CAACS,GAAG,CAAEF,CAAC,IACjBA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CAChD,CAAC;MACH;IAEF;MACE,OAAOP,KAAK;EAChB;AACF,CAAC;AACD,eAAeD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}