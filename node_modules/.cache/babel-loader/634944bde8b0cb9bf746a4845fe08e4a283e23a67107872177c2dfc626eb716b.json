{"ast":null,"code":"const cart = [];\nconst handleCart = (state = cart, action) => {\n  const orderData = cart => {\n    // fetch('http://localhost:3000/cartdetails', {\n    // method: 'DELETE',\n    // })\n    // .then(() => {\n    // Cart data deleted successfully\n    // console.log(\"deleted\");\n    // })\n    // .catch((error) => {\n    // console.error('Error deleting cart data: ', error);\n    // });\n\n    fetch(\"http://localhost:3000/cartdetails\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        cart\n      })\n    }).then(res => {\n      console.log(123);\n      //  toast.success(\"Checkout successfully.\");\n      //  navigate(\"/order\");\n    }).catch(err => {\n      console.log(err);\n      // toast.error(\"Failed: \" + err.message);\n    });\n  };\n\n  const rest = action.payload;\n  switch (action.type) {\n    case \"ADDITEM\":\n      //  check if Rest is Already Exist\n      const exist = state.find(x => x.id === rest.id);\n      if (exist) {\n        // Increase the Quantity\n        return state.map(x => x.id === rest.id ? {\n          ...x,\n          qty: x.qty + 1\n        } : x);\n        orderData(state);\n        return state;\n      } else {\n        const rest = action.payload;\n        const gg = [...state, {\n          ...rest,\n          qty: 1\n        }];\n        orderData(gg);\n        return gg;\n      }\n      orderData(state);\n    case \"DELTITEM\":\n      const exist1 = state.find(x => x.id === rest.id);\n      console.log(\"delete\");\n      if (exist1.qty === 1) {\n        return state.filter(x => x.id !== exist1.id);\n      } else {\n        console.log(\"cart si th\");\n        return state.map(x => x.id === rest.id ? {\n          ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n    default:\n      return state;\n  }\n};\nexport default handleCart;","map":{"version":3,"names":["cart","handleCart","state","action","orderData","fetch","method","headers","body","JSON","stringify","then","res","console","log","catch","err","rest","payload","type","exist","find","x","id","map","qty","gg","exist1","filter"],"sources":["C:/Users/kumar/OneDrive/Desktop/4 React project/Zomato/my-foodi/src/redux/reducer/handleCart.js"],"sourcesContent":["const cart = [];\r\n\r\nconst handleCart = (state = cart, action) => {\r\n  const orderData= (cart)=>{\r\n    // fetch('http://localhost:3000/cartdetails', {\r\n        // method: 'DELETE',\r\n    // })\r\n        // .then(() => {\r\n            // Cart data deleted successfully\r\n            // console.log(\"deleted\");\r\n        // })\r\n        // .catch((error) => {\r\n            // console.error('Error deleting cart data: ', error);\r\n        // });\r\n\r\n    fetch(\"http://localhost:3000/cartdetails\", {\r\n      method: \"POST\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      body: JSON.stringify({cart}),\r\n    })\r\n      .then((res) => {\r\n        console.log(123)\r\n      //  toast.success(\"Checkout successfully.\");\r\n      //  navigate(\"/order\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n       // toast.error(\"Failed: \" + err.message);\r\n      });\r\n  }\r\n  const rest = action.payload;\r\n  switch (action.type) {\r\n    case \"ADDITEM\":\r\n      //  check if Rest is Already Exist\r\n      const exist = state.find((x) => x.id === rest.id);\r\n      if (exist) {\r\n        // Increase the Quantity\r\n         return state.map((x) =>\r\n          x.id === rest.id ? { ...x, qty: x.qty + 1 } : x\r\n        );\r\n        orderData(state);\r\n        return state;\r\n      } else {\r\n        const rest = action.payload;\r\n        const gg= [\r\n          ...state,\r\n          {\r\n            ...rest,\r\n            qty: 1,\r\n          },\r\n        ];\r\n        orderData(gg);\r\n        return gg;\r\n      }\r\n      orderData(state);\r\n\r\n    case \"DELTITEM\":\r\n      const exist1 = state.find((x) => x.id === rest.id);\r\n      console.log(\"delete\");\r\n      if (exist1.qty === 1) {\r\n        return state.filter((x) => x.id !== exist1.id);\r\n      } else {\r\n        console.log(\"cart si th\");\r\n        return state.map((x) =>\r\n          x.id === rest.id ? { ...x, qty: x.qty - 1 } : x\r\n        );\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default handleCart;\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG,EAAE;AAEf,MAAMC,UAAU,GAAGA,CAACC,KAAK,GAAGF,IAAI,EAAEG,MAAM,KAAK;EAC3C,MAAMC,SAAS,GAAGJ,IAAI,IAAG;IACvB;IACI;IACJ;IACI;IACI;IACA;IACJ;IACA;IACI;IACJ;;IAEJK,KAAK,CAAC,mCAAmC,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACV;MAAI,CAAC;IAC7B,CAAC,CAAC,CACCW,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAClB;MACA;IACA,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MACjB;IACD,CAAC,CAAC;EACN,CAAC;;EACD,MAAMC,IAAI,GAAGd,MAAM,CAACe,OAAO;EAC3B,QAAQf,MAAM,CAACgB,IAAI;IACjB,KAAK,SAAS;MACZ;MACA,MAAMC,KAAK,GAAGlB,KAAK,CAACmB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;MACjD,IAAIH,KAAK,EAAE;QACT;QACC,OAAOlB,KAAK,CAACsB,GAAG,CAAEF,CAAC,IAClBA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CAChD,CAAC;QACDlB,SAAS,CAACF,KAAK,CAAC;QAChB,OAAOA,KAAK;MACd,CAAC,MAAM;QACL,MAAMe,IAAI,GAAGd,MAAM,CAACe,OAAO;QAC3B,MAAMQ,EAAE,GAAE,CACR,GAAGxB,KAAK,EACR;UACE,GAAGe,IAAI;UACPQ,GAAG,EAAE;QACP,CAAC,CACF;QACDrB,SAAS,CAACsB,EAAE,CAAC;QACb,OAAOA,EAAE;MACX;MACAtB,SAAS,CAACF,KAAK,CAAC;IAElB,KAAK,UAAU;MACb,MAAMyB,MAAM,GAAGzB,KAAK,CAACmB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;MAClDV,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrB,IAAIa,MAAM,CAACF,GAAG,KAAK,CAAC,EAAE;QACpB,OAAOvB,KAAK,CAAC0B,MAAM,CAAEN,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKI,MAAM,CAACJ,EAAE,CAAC;MAChD,CAAC,MAAM;QACLV,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACzB,OAAOZ,KAAK,CAACsB,GAAG,CAAEF,CAAC,IACjBA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAG;QAAE,CAAC,GAAGH,CAChD,CAAC;MACH;IAEF;MACE,OAAOpB,KAAK;EAChB;AACF,CAAC;AACD,eAAeD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}