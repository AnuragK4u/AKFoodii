{"ast":null,"code":"// actions.js\nimport axios from 'axios';\n\n// Action to add an item to the cart\nexport const addCart = item => {\n  return async (dispatch, getState) => {\n    try {\n      const currentCart = getState().cart.cart;\n      const updatedCart = [...currentCart, item];\n\n      // Make the request to your JSON server to update the cart\n      await axios.put('http://localhost:3000/cartdetails', updatedCart);\n\n      // Dispatch the action to update the cart in the Redux store\n      dispatch({\n        type: 'ADD_TO_CART',\n        payload: updatedCart\n      });\n    } catch (error) {\n      // Handle errors here\n    }\n  };\n};\n\n// Action to remove an item from the cart\nexport const delCart = item => {\n  return async (dispatch, getState) => {\n    try {\n      const currentCart = getState().cart.cart;\n      const updatedCart = currentCart.filter(cartItem => cartItem.product_id !== item.product_id);\n\n      // Make the request to your JSON server to update the cart\n      await axios.put('http://localhost:3000/cartdetails', updatedCart);\n\n      // Dispatch the action to update the cart in the Redux store\n      dispatch({\n        type: 'REMOVE_FROM_CART',\n        payload: updatedCart\n      });\n    } catch (error) {\n      // Handle errors here\n    }\n  };\n};","map":{"version":3,"names":["axios","addCart","item","dispatch","getState","currentCart","cart","updatedCart","put","type","payload","error","delCart","filter","cartItem","product_id"],"sources":["C:/Users/kumar/OneDrive/Desktop/4 React project/Zomato/my-foodi/src/redux/action/index.js"],"sourcesContent":["// actions.js\r\nimport axios from 'axios';\r\n\r\n// Action to add an item to the cart\r\nexport const addCart = (item) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const currentCart = getState().cart.cart;\r\n      const updatedCart = [...currentCart, item];\r\n\r\n      // Make the request to your JSON server to update the cart\r\n      await axios.put('http://localhost:3000/cartdetails', updatedCart);\r\n\r\n      // Dispatch the action to update the cart in the Redux store\r\n      dispatch({ type: 'ADD_TO_CART', payload: updatedCart });\r\n    } catch (error) {\r\n      // Handle errors here\r\n    }\r\n  };\r\n};\r\n\r\n// Action to remove an item from the cart\r\nexport const delCart = (item) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const currentCart = getState().cart.cart;\r\n      const updatedCart = currentCart.filter((cartItem) => cartItem.product_id !== item.product_id);\r\n\r\n      // Make the request to your JSON server to update the cart\r\n      await axios.put('http://localhost:3000/cartdetails', updatedCart);\r\n\r\n      // Dispatch the action to update the cart in the Redux store\r\n      dispatch({ type: 'REMOVE_FROM_CART', payload: updatedCart });\r\n    } catch (error) {\r\n      // Handle errors here\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAI,IAAK;EAC/B,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,WAAW,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAACA,IAAI;MACxC,MAAMC,WAAW,GAAG,CAAC,GAAGF,WAAW,EAAEH,IAAI,CAAC;;MAE1C;MACA,MAAMF,KAAK,CAACQ,GAAG,CAAC,mCAAmC,EAAED,WAAW,CAAC;;MAEjE;MACAJ,QAAQ,CAAC;QAAEM,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAEH;MAAY,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;IAAA;EAEJ,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAIV,IAAI,IAAK;EAC/B,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,WAAW,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAACA,IAAI;MACxC,MAAMC,WAAW,GAAGF,WAAW,CAACQ,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,UAAU,KAAKb,IAAI,CAACa,UAAU,CAAC;;MAE7F;MACA,MAAMf,KAAK,CAACQ,GAAG,CAAC,mCAAmC,EAAED,WAAW,CAAC;;MAEjE;MACAJ,QAAQ,CAAC;QAAEM,IAAI,EAAE,kBAAkB;QAAEC,OAAO,EAAEH;MAAY,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;IAAA;EAEJ,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}